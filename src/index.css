@tailwind base;
@tailwind components;
@tailwind utilities;

@layer utilities {
  .animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out both;
  }
  @keyframes fadeInUp {
    0% {
      opacity: 0;
      transform: translateY(20px);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }
  /* index.css */

/* index.css */

/* Shimmer border from before */
@keyframes borderShimmer {
  0%   { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

.gradient-border {
  position: relative;
  border-radius: 1rem;
  padding: 3px;            /* border thickness */
  display: inline-block;
  overflow: visible;
}
.gradient-border::before {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background:
    linear-gradient(
      90deg,
      #444 0%,
      #ccc 25%,
      #777 50%,
      #ccc 75%,
      #444 100%
    );
  background-size: 200% 100%;
  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: destination-out;
          mask-composite: exclude;
  mask-mode: alpha;
  padding: 3px;
  animation: borderShimmer 4s linear infinite;
  z-index: 0;
}

/* Ensure inner card content sits above the shimmer */
.gradient-border > * {
  position: relative;
  z-index: 1;
}

/* Drop shadow on the card */
.card-container {
  position: relative;
  display: inline-block;
  box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
}

/* Floor reflection */
.card-reflection {
  position: absolute;
  top: 100%; /* right below the card */
  left: 0;
  width: 100%;
  height: 50%;
  background: linear-gradient(to bottom, rgba(0,0,0,0.2), transparent);
  transform: scaleY(-1);
  filter: blur(8px);
  opacity: 0.2;
  border-radius: inherit;
  pointer-events: none;
  z-index: 0;
}

/* Background glow behind card */
.background-glow {
  position: absolute;
  inset: 0;
  background: radial-gradient(circle at center, rgba(255,255,255,0.1), transparent 60%);
  z-index: -1;
}
}